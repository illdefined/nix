name: Lix installation
description: Install Lix package manager

inputs:
  accept-flake-config:
    description: Whether to accept Nix configuration from the nixConfig flake attribute, boolean value
    default: 'true'

  experimental-features:
    description: List of additonal experimental Nix features to enable, separated by space

  extra-platforms:
    description: List of extra platforms to support, separated by space
    default: ${{ runner.os == 'Linux' && 'riscv64-linux' || '' }}

  fsync-metadata:
    description: Whether to flush Nix store meta‐data synchronously, boolean value
    default: 'false'

  extra-config:
    description: Extra lines to append to Nix configuration

runs:
  using: composite
  steps:
    - name: Install QEMU user‐space emulator
      if: runner.os == 'Linux'
      shell: bash
      run: |
        pkgcache=/var/cache/apt/pkgcache.bin
        if [[ ! -s $pkgcache || $(stat -c %Y $pkgcache) -lt $((EPOCHSECONDS - 86400)) ]]; then
          sudo apt update
        fi
        
        sudo apt install qemu-user-binfmt
    
    - name: Install Lix
      uses: DeterminateSystems/nix-installer-action@main
      with:
        source-url: 'https://install.lix.systems/lix/lix-installer-${{ fromJSON(''{"X64":"x86_64","ARM64":"aarch64"}'')[runner.arch] }}-${{ fromJSON(''{"Linux":"linux","macOS":"darwin","Windows":"windows"}'')[runner.os] }}'
        logger: pretty
        diagnostic-endpoint: ''
        extra-conf: |
          accept-flake-config = ${{ inputs.accept-flake-config }}
          experimental-features = nix-command flakes pipe-operator ca-derivations
          extra-experimental-features = ${{ inputs.experimental-features }}
          extra-platforms = ${{ inputs.extra-platforms }}
          fsync-metadata = ${{ inputs.fsync-metadata }}
          ${{ inputs.extra-config }}
